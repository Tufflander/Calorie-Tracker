import * as db from './db.js';const listeners=new Map();export const bus={on(name,cb){if(!listeners.has(name))listeners.set(name,new Set());listeners.get(name).add(cb);return()=>listeners.get(name).delete(cb)},emit(name,p){(listeners.get(name)||[]).forEach(fn=>fn(p))}};window.bus=bus;const mem={user:null,targets:null,settings:{theme:'auto',units:'kcal',supervised:false,tempStepGoal:null,tempStepGoalDate:null},cache:{}};export function getState(){return mem}export async function hydrate(){const [user,targets,settings]=await Promise.all([db.get('user','user'),db.get('targets','targets'),db.get('settings','settings')]);mem.user=user?.data||JSON.parse(localStorage.getItem('user')||'null');mem.targets=targets?.data||JSON.parse(localStorage.getItem('targets')||'null');mem.settings=settings?.data||JSON.parse(localStorage.getItem('settings')||'null')||mem.settings;bus.emit('hydrated',mem)}export async function setSettings(s){mem.settings=s;localStorage.setItem('settings',JSON.stringify(s));await db.put('settings',{id:'settings',data:s});bus.emit('user:updateSettings',s)}export async function setUser(u){mem.user=u;localStorage.setItem('user',JSON.stringify(u));await db.put('user',{id:'user',data:u})}export async function setTargets(t){mem.targets=t;localStorage.setItem('targets',JSON.stringify(t));await db.put('targets',{id:'targets',data:t});bus.emit('user:updateTargets',t)}export async function addFood(entry){await db.put('logs_food',entry);bus.emit('log:addFood',entry)}export async function removeFood(id){await db.del('logs_food',id);bus.emit('log:removeFood',id)}export async function addWeight(entry){await db.put('logs_weight',entry);bus.emit('log:addWeight',entry)}export async function addSteps(entry){await db.put('logs_steps',entry);bus.emit('log:addSteps',entry)}export async function addHydration(entry){await db.put('logs_hydration',entry);bus.emit('log:addHydration',entry)}export async function addTraining(entry){await db.put('logs_training',entry);bus.emit('log:addTraining',entry)}export async function getFoodsByDate(fromISO,toISO){return db.byDate('logs_food',fromISO,toISO)}export async function getWeightsByDate(fromISO,toISO){return db.byDate('logs_weight',fromISO,toISO)}export async function getStepsByDate(fromISO,toISO){return db.byDate('logs_steps',fromISO,toISO)}export async function getHydrationByDate(fromISO,toISO){return db.byDate('logs_hydration',fromISO,toISO)}